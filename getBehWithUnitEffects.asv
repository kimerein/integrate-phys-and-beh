function getBehWithUnitEffects(spikes,beh_sweeps,led_window,norm_window,tbt)

temp=unique(spikes.sweeps.trials);
bothSpikesAndBehTrials=temp(ismember(temp,unique(spikes.trials)));

% choose behavior condition to analyze
beh_cond=beh_sweeps.pawOutDuringWheel(bothSpikesAndBehTrials)==0 & beh_sweeps.reachedAfterCue(bothSpikesAndBehTrials)==1;

% get spikes with and without opto for this behavior condition
[unitFx,all_frs,supp]=getUnitsEffects_withBehavior(spikes,led_window,norm_window,beh_cond);

% get reaches for this behavior condition
behFx.x=nanmean(tbt.times(beh_cond,:),1);
behFx.cue=nanmean(tbt.cueZone_onVoff(beh_cond,:),1);
behFx.opto=nanmean(tbt.optoZone(beh_cond,:),1);







ds=1; figure(); plot(downSampAv(nanmean(alltbt.times,1),ds),downSampAv(nanmean(alltbt.cueZone_onVoff,1),ds),'Color','b');
hold on; plot(downSampAv(nanmean(alltbt.times,1),ds),downSampAv(nanmean(alltbt.reachStarts(out.reachedAfterCue_previousTrial==1 & out.reachedAfterCue_2back==1 & out.led_previousTrial==0 & out.led_2back==0,:),1),ds),'Color','k');
hold on; plot(downSampAv(nanmean(alltbt.times,1),ds),downSampAv(nanmean(alltbt.reachStarts((out.led_previousTrial==1 & out.led_2back==1),:),1),ds),'Color','r');




% spikes,led_window,norm_window,useTrials)

